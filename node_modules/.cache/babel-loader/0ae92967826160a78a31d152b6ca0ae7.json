{"ast":null,"code":"var _jsxFileName = \"/home/ceaicovschi/Desktop/Work/Fusion Works Internship/React Spaceship News portal/my-app/src/components/News/News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as s from './News.styling';\nimport { getArticles } from '../../Requests/posts';\nimport { NewsItem } from './NewsItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const News = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  console.log(posts);\n  React.useEffect(() => {\n    // This makes a get request according to the link when the component is mounted\n    getArticles().then(response => {\n      console.log(\"response:\", response);\n      setPosts(response.data);\n    }).catch(error => console.log(\"error:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(s.NewsSection, {\n      children: /*#__PURE__*/_jsxDEV(s.NewsFlexGrid, {\n        children: posts.map(item => /*#__PURE__*/_jsxDEV(NewsItem, {\n          imageUrl: item.imageUrl,\n          title: item.title,\n          articleId: item.id\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(News, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/home/ceaicovschi/Desktop/Work/Fusion Works Internship/React Spaceship News portal/my-app/src/components/News/News.js"],"names":["React","useState","s","getArticles","NewsItem","News","posts","setPosts","console","log","useEffect","then","response","data","catch","error","map","item","imageUrl","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,CAAZ,MAAmB,gBAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAN,EAAAA,KAAK,CAACU,SAAN,CAAiB,MAAM;AACrB;AACAP,IAAAA,WAAW,GACRQ,IADH,CACSC,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,QAAzB;AACAL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACH,KAJD,EAKGC,KALH,CAKUC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,KAAtB,CALpB;AAOD,GATD,EASG,EATH;AAWA,sBACI;AAAA,2BACI,QAAC,CAAD,CAAG,WAAH;AAAA,6BACI,QAAC,CAAD,CAAG,YAAH;AAAA,kBAEQT,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACV,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEA,IAAI,CAACC,QAAzB;AAAmC,UAAA,KAAK,EAAED,IAAI,CAACE,KAA/C;AAAsD,UAAA,SAAS,EAAEF,IAAI,CAACG;AAAtE,WAA+EH,IAAI,CAACG,EAApF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CA9BM;;GAAMf,I;;KAAAA,I","sourcesContent":["import React, { useState } from 'react'\nimport * as s from './News.styling'\nimport { getArticles } from '../../Requests/posts'\nimport { NewsItem } from './NewsItem'\n\n\nexport const News = () => {\n\n    const [posts, setPosts] = useState([]);\n\n    console.log(posts);\n\n    React.useEffect( () => {\n      // This makes a get request according to the link when the component is mounted\n      getArticles()\n        .then((response) => {\n          console.log(\"response:\", response);\n          setPosts(response.data)\n      })\n        .catch((error) => console.log(\"error:\", error))\n        \n    }, []);\n    \n    return (\n        <>\n            <s.NewsSection>\n                <s.NewsFlexGrid>\n                    {\n                        posts.map(item => (\n                            <NewsItem imageUrl={item.imageUrl} title={item.title} articleId={item.id} key={item.id} />\n                        ))\n                    }\n                </s.NewsFlexGrid>\n           </s.NewsSection>\n        </>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}